// Memoization
function fib(n, memo = []) {
	if (memo[n] !== undefined) return memo[n];
	if (n <= 2) return 1;
	let res = fib(n - 1, memo) + fib(n - 2, memo);
	memo[n] = res;
	return res;
}

console.log(fib(100));

// Tabulation

function fibT(n) {
	if (n <= 2) return 1;
	let fibNums = [0, 1, 1];
	for (var i = 3; i <= n; i += 1) {
		fibNums[i] = fibNums[i - 1] + fibNums[i - 2];
	}
	return fibNums[n];
}
console.log(fibT(100));

//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
///1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
///By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

function fibEven(n = 34, max = 4000000) {
// Fib(34) = 5702887
  if (n <= 2) return 1;
  let fibNums = [0, 1, 1];
  let sumOfEvenFib = 0;
  for (let i = 3; i <= n; i += 1) {
    fibNums[i] = fibNums[i - 1] + fibNums[i - 2];
    if (fibNums[i] % 2 === 0 && fibNums[i] <= max) {
      sumOfEvenFib += fibNums[i];
    }
  }
  return {
    fibNums: fibNums[n],
    sumOfEvenFib: sumOfEvenFib,
  };
}

console.log(fibEven());
